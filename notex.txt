ZERODHA TRADING PLATFORM

BASICS 

reasons for low lantency 

1. Hardware Optimization:
2. Software Optimization: 
    Kernel Bypass: Techniques like kernel bypass (e.g., using DPDK or Solarflare's OpenOnload) to reduce operating system overhead.
3. Market Data Feeds:
3. Order Matching Engine:
4. Latency Monitoring and Reduction:

e.g. NASDAQ , NYSE , CME , EUREX , ZERODHA

Technologies Used in Low-Latency Exchange Systems

FPGAs (Field-Programmable Gate Arrays):

Hardware devices that can be programmed to perform specific tasks with extremely low latency.

Kernel Bypass Libraries:

Tools like DPDK (Data Plane Development Kit) or Solarflare's OpenOnload to reduce OS overhead.

In-Memory Databases:

Storing and processing data in RAM for faster access.

Custom Protocols:

Proprietary protocols designed for speed and efficiency.

functional requirements 

1. Signup
2. KYC
3. Balances <-> Banks
now you can start trading

How exchanges work 

a. user can sign up , sign in 
b. users needs KYC and can connect their DEMAT (Dematerialized Account)
c. user can place orders (limit and Market orders)
d. user can see their balances and open orders

Finance Jargon

the price of stocks are determined by the supply - demand

Orderbook : An order book is a real-time electronic list of buy and sell orders for a particular financial asset, such as stocks, cryptocurrencies, or commodities. It is used in trading platforms to show market participants' intentions to buy (bids) and sell (asks) at different price levels.
the orderbook is public, it contains the orders that are not matching

the price of any asset is the price on which the last order was completed

1. Limit Order
A limit order is an order to buy or sell an asset at a specific price or better. It does not execute instantly but waits in the order book until a matching order is available.

Characteristics of a Limit Order:
Sets an exact price (no slippage)
Not guaranteed to execute (depends on market movement)
Used when price control is more important than speed

2. Market Order
A market order is an order to buy or sell an asset immediately at the best available price in the order book.

Cracteristics of a Market Order:
Executed instantly at the current market price
Guarantees execution but not the price (price may change due to slippage)
Used when speed is more important than price

they are used by retail

LIQUIDITY AND MARKET DEPTH

1. Liquidity
Liquidity refers to how easily an asset can be bought or sold without affecting its price. A highly liquid market has many buyers and sellers, allowing large trades to happen quickly and with minimal price change.
more liquidity = better exchange 


2. Market Depth
Market depth refers to the order bookâ€™s ability to absorb large buy or sell orders without significantly impacting the price. It represents the volume of limit buy and sell orders at different price levels.

1. Maker (Liquidity Provider)
A maker is a trader who places limit orders that add liquidity to the order book. Their order stays in the order book until another trader matches it.

"Makes" the market by providing buy/sell orders
Uses limit orders (e.g., "Buy 1 BTC at $39,500")
Lower fees (or even rebates on some exchanges)
Helps with market stability

2. Taker (Liquidity Consumer)
A taker is a trader who places a market order (or an instantly matching limit order) that removes liquidity from the order book

"Takes" liquidity by filling existing orders
Uses market orders (e.g., "Buy 1 BTC at the best price")
Higher fees (since they demand immediate execution)
Helps with faster order execution

taker fee > maker fee


creating low latency:
1. using faster programming languages : c , c++ , rust , assembly , zig
2. in memory orderbooks 
3. faster serialization and deserialization of data